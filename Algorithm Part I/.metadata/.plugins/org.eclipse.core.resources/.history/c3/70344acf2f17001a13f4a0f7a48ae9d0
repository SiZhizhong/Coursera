import edu.princeton.cs.algs4.Stopwatch;
import edu.princeton.cs.algs4.StdRandom;
import edu.princeton.cs.algs4.StdOut;
public class Sorters {
	
	public void insertionSort(Comparable[] list) {
		for (int i=0;i<list.length-1;i++) {
			int minindex=i;
			for(int j=i+1;j<list.length;j++) {
				if (list[j].compareTo(list[minindex])==-1) minindex=j; 
			}
			Comparable temp=list[i];
			list[i]=list[minindex];
			list[minindex]=temp;
			
		}
	}
	
	public void selectionSort(Comparable[] list) {
		for(int i=1;i<list.length;i++) {
			int j=i;
			while(j>0 && list[j].compareTo(list[j-1])==-1) {
				Comparable temp=list[j-1];
				list[j-1]=list[j];
				list[j]=temp;
			}
		}
	}
	
	public void shellSort(Comparable[] list) {
		
	}
	
	public void shuffling(Object[] list) {
		
	}
	public static void main(String[]args) {
		int N=10000;
		Integer [] list=new Integer[N];
		for(int i=0;i<N;i++) list[i]=StdRandom.uniform(2*N);
		Sorters sort=new Sorters();
		Stopwatch sw=new Stopwatch();
		sort.selectionSort(list);
		double tm=sw.elapsedTime();
		StdOut.println(tm);
		for(int i=0;i<10;i++) StdOut.println(list[i]);
		StdOut.println(list[N-1]);
		
		
	}

}
